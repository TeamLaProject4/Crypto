{"version":3,"sources":["components/AuthForm.tsx","utils/axios.js","pages/ResetPassword.tsx","pages/Home.tsx","pages/Login.tsx","pages/ForgotPassword.tsx","pages/Protected.tsx","utils/dataFetching.js","app/hooks.ts","utils/auth.js","components/Navigation.jsx","components/InnerForm.tsx","components/FormContainer.tsx","pages/user/UserSettings.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/UserSlice.ts","features/AuthApi.js","app/store.ts","serviceWorker.ts","i18n.js","index.tsx"],"names":["AuthForm","title","values","validate","validationSchema","submit","submitText","bottomLink","styleModifier","toggleModal","serverErrorMsg","useState","setSubmitting","setFormValues","initialValues","useEffect","forEach","value","name","formik","useFormik","validateOnChange","validateOnBlur","enableReinitialize","onSubmit","FormikBag","a","response","Object","entries","key","errors","String","className","handleSubmit","map","id","type","onChange","handleChange","placeholder","color","fullWidth","href","link","text","axios","create","baseURL","process","withCredentials","headers","ResetPassword","Yup","shape","Password","min","max","required","token","useParams","authProps","Email","test","length","post","email","password","password_confirmation","Home","useTranslation","t","i18n","changeLanguage","lng","onClick","get","then","r","console","log","catch","e","LoginCard","history","useHistory","setServerErrorMsg","mutate","push","data","ForgotPassword","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","error","Protected","fetcher","useSelector","url","res","useUser","useSWR","errorRetryCount","revalidateOnFocus","loggedOut","loading","user","PrivateRoute","children","rest","render","location","to","pathname","state","from","lefLinksLoggedIn","dropdown","items","disabled","initialLinks","logoText","logoLink","leftLinks","rightLinks","Navigation","links","setLinks","localStorage","setItem","JSON","stringify","document","cookie","logout","InnerForm","size","FormContainer","forms","form","UserSettings","current_password","formContainer","put","App","exact","path","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","createSlice","initialState","status","reducers","increment","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","UserSlice","loggedIn","login","authApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","credentials","endpoints","csrf","query","mutation","method","body","store","useCsrfQuery","useLoginMutation","useLogoutMutation","configureStore","reducer","counter","counterReducer","userReducer","middleware","getDefaultMiddleware","concat","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","StrictMode","fallback","getElementById","URL","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.93194455.chunk.js","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useFormik, Form } from \"formik\";\nimport Input from \"@notus-pro/react/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"@notus-pro/react/Button\";\nimport * as Yup from \"yup\";\nimport { stringify } from \"querystring\";\n\nexport interface Value {\n  name: string;\n  value: string;\n  type?: string;\n  placeholder?: string;\n  icon?: string;\n}\nexport interface AuthFormProps {\n  title: string;\n  values: Array<Value>;\n  validationSchema?: any;\n  validate(values: any): any;\n  submit(values: any, FormikBag?: any): any;\n  submitText: string;\n  styleModifier?: string;\n  toggleModal?: boolean;\n  bottomLink?: { text: string; link: string };\n  serverErrorMsg?: string;\n}\n\nexport default function AuthForm({\n  title,\n  values,\n  validationSchema,\n  validate,\n  submit,\n  submitText,\n  styleModifier,\n  toggleModal,\n  bottomLink,\n  serverErrorMsg,\n}: AuthFormProps): ReactElement {\n  const [submitting, setSubmitting] = useState(false);\n  const [formValues, setFormValues] = useState(values);\n  let initialValues = {};\n  useEffect(() => {\n    setFormValues(values);\n    values.forEach((value) => {\n      initialValues[value.name] = value.value;\n    });\n  }, [values]);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnChange: false,\n    validateOnBlur: false,\n    enableReinitialize: true,\n    validate,\n    onSubmit: async (values, FormikBag) => {\n      setSubmitting(true);\n      const response = await submit(values);\n      setSubmitting(false);\n      // console.log(response);\n      if (response) {\n        Object.entries(response).forEach(([key, value]) => {\n          formik.errors[key] = String(value);\n        });\n      }\n    },\n  });\n  return (\n    <>\n      <div className=\"flex content-center items-center justify-center\">\n        <div className=\"w-full lg:w-4/12 px-4\">\n          <div className=\"relative flex flex-col w-full mb-6 shadow-lg rounded-lg bg-white \">\n            <div className=\"mb-0 px-6 py-6\">\n              <div className=\"text-center mb-3\">\n                <h6 className=\"text-blueGray-500 text-xl font-bold\">{title}</h6>\n                <hr className=\"mt-6 border-b-1 border-blueGray-200\"></hr>\n              </div>\n            </div>\n            <div className=\"flex-auto px-4 lg:px-10 py-10 pt-0\">\n              <form onSubmit={formik.handleSubmit}>\n                {values &&\n                  values.map((value) => {\n                    return (\n                      <div className=\"relative w-full mb-2\">\n                        <label\n                          className=\"block uppercase text-blueGray-500 text-sm\n                           font-bold mb-2 ml-1\"\n                        >\n                          {value.name}\n                        </label>\n                        {/* neg margin to override Input margin */}\n                        <div className=\"-mb-2\">\n                          <Input\n                            id={value.name}\n                            name={value.name}\n                            type={value.type}\n                            onChange={formik.handleChange}\n                            value={formik.values[value.name]}\n                            placeholder={value.placeholder}\n                          />\n                        </div>\n                        {formik.errors[value.name] ? (\n                          <div className=\"text-red-500 text-xs\">\n                            {formik.errors[value.name]}\n                          </div>\n                        ) : (\n                          <div className=\"pb-2\"></div>\n                        )}\n                      </div>\n                    );\n                  })}\n                {serverErrorMsg ? (\n                  <div className=\"text-red-500 text-xs\">{serverErrorMsg}</div>\n                ) : (\n                  <div className=\"pb-2\"></div>\n                )}\n\n                <div className={\"text-center mt-5\"}>\n                  <Button color=\"pink\" fullWidth type=\"submit\" className={\"\"}>\n                    {submitText}\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          {bottomLink && (\n            <div className=\"flex flex-wrap mt-6 relative\">\n              <div className=\"w-1/2\">\n                <div className=\"text-blueGray-500 ml-2\">\n                  <a href={bottomLink.link}>{bottomLink.text}</a>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\n// import {useAppDispatch} from '../app/hooks'\n// // import cookie from \"cookie\";\n\n// window.axios.interceptors.response.use(\n//   function (response) {\n//     // Call was successful, don't do anything special.\n//     return response;\n//   },\n//   function (error) {\n//     switch (error.response.status) {\n//       case 401: // Not logged in\n//       case 419: // Session expired\n//       case 503: // Down for maintenance\n//         // Bounce the user to the login screen with a redirect back\n//         window.location.reload();\n//         break;\n//       case 500:\n//         alert(\"Oops, something went wrong!\");\n//         break;\n//       default:\n//         // Allow individual requests to handle other errors\n//         return Promise.reject(error);\n//     }\n//   }\n// );\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import React, { ReactElement } from \"react\";\nimport AuthForm, { Value, AuthFormProps } from \"../components/AuthForm\";\nimport * as Yup from \"yup\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../utils/axios\";\ninterface Props {}\n\nfunction ResetPassword({}: Props): ReactElement {\n  const validate = (values) => {\n    const errors = { Password: null, \"Confirm Password\": null, Email: null };\n    if (!values.Email) {\n      errors.Email = \"Required\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.Email)\n    ) {\n      errors.Email = \"Invalid email\";\n    }\n\n    if (!values[\"Password\"]) {\n      errors[\"Password\"] = \"Required\";\n    } else if (values[\"Password\"].length < 8) {\n      errors[\"Password\"] = \"Password is too short. Min lenght is 8\";\n    }\n    if (!values[\"Confirm Password\"]) {\n      errors[\"Confirm Password\"] = \"Required\";\n    } else if (values[\"Password\"].length < 8) {\n      errors[\"Confirm Password\"] = \"Password is too short. Min lenght is 8\";\n    } else if (values[\"Confirm Password\"] !== values[\"Password\"]) {\n      errors[\"Confirm Password\"] = \"Passwords do not match\";\n    }\n    if (errors.Password || errors[\"Confirm Password\"] || errors.Email) {\n      return errors;\n    }\n    return null;\n  };\n  const validationSchema = Yup.object().shape({\n    Password: Yup.string()\n      .min(8, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n    \"Reset Password\": Yup.string()\n      .min(8, \"Too Short!\")\n      .max(50, \"Too Long!\")\n      .required(\"Required\"),\n  });\n\n  const { token } = useParams();\n  const submit = async (values: any) => {\n    await axios.post(\"/api/reset-password\", {\n      email: values.Email,\n      password: values.Password,\n      password_confirmation: values[\"Confirm Password\"],\n      token,\n    });\n  };\n\n  const authProps: AuthFormProps = {\n    title: \"Reset password\",\n    values: [\n      {\n        name: \"Email\",\n        value: \"\",\n        type: \"\",\n        placeholder: \"password\",\n      },\n      {\n        name: \"Password\",\n        value: \"\",\n        type: \"password\",\n        placeholder: \"password\",\n      },\n      {\n        name: \"Confirm Password\",\n        value: \"\",\n        type: \"password\",\n        placeholder: \"password\",\n      },\n    ],\n    validate,\n    validationSchema,\n    submit,\n    submitText: \"Reset password\",\n  };\n  return (\n    <div className=\"pt-20\">\n      <AuthForm {...authProps} />;\n    </div>\n  );\n}\n\nexport default ResetPassword;\n","import React, { ReactElement } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"../utils/axios\";\ninterface Props {}\n\nexport default function Home({}: Props): ReactElement {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n  return (\n    <div>\n      <button\n        className=\"mr-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        type=\"button\"\n        onClick={() => {\n          axios\n            .get(\"api/user\")\n            .then((r) => console.log(r))\n            .catch((e) => console.log(e));\n        }}\n      >\n        Secret api call\n      </button>\n      <button\n        className=\"mr-5 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        type=\"button\"\n        onClick={() => changeLanguage(\"nl\")}\n      >\n        nl\n      </button>\n\n      <button\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        type=\"button\"\n        onClick={() => changeLanguage(\"en\")}\n      >\n        en\n      </button>\n      <div className=\" text-center\">{t(\"test\")}</div>\n    </div>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"../utils/axios\";\nimport { mutate } from \"swr\";\nimport AuthForm, { AuthFormProps } from \"../components/AuthForm\";\n\ninterface Props {}\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nexport default function LoginCard({}: Props): ReactElement {\n  let history = useHistory();\n  const [serverErrorMsg, setServerErrorMsg] = useState(null);\n  // const { t, i18n } = useTranslation();\n\n  const validate = (values) => {\n    let errors = { email: \"\", password: \"\" };\n    if (!values.email) {\n      errors.email = \"Verplicht\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      errors.email = \"Ongeldige email\";\n    }\n    if (!values.password) {\n      errors.password = \"Verplicht\";\n    } else if (values.password.length < 8) {\n      errors.password = \"Wachtwoord moet tenminste 8 karakters lang zijn\";\n    }\n\n    if (errors.email || errors.password) {\n      return errors;\n    }\n    return null;\n  };\n\n  const submit = async (values) => {\n    // console.log(\"formikbag\", FormikBag);\n    await axios.get(\"/sanctum/csrf-cookie\");\n    try {\n      await axios.post(\"/api/login\", {\n        email: values.email,\n        password: values.password,\n      });\n      await mutate(\"/api/user\");\n      history.push(\"/\");\n    } catch (error) {\n      try {\n        setServerErrorMsg(error.response.data.errors.email[0]);\n      } catch {\n        setServerErrorMsg(\"Onjuiste inloggegevens\");\n      }\n    }\n  };\n  const authProps: AuthFormProps = {\n    title: \"Sign in\",\n    values: [\n      {\n        name: \"email\",\n        value: \"\",\n        type: \"\",\n        placeholder: \"email\",\n      },\n      {\n        name: \"password\",\n        value: \"\",\n        type: \"password\",\n        placeholder: \"password\",\n      },\n    ],\n    validate,\n    submit,\n    submitText: \"Sign in\",\n    bottomLink: { link: \"/forgot-password\", text: \"Forgot password?\" },\n    serverErrorMsg,\n  };\n  return (\n    <div className=\"pt-20\">\n      <AuthForm {...authProps} />;\n    </div>\n  );\n}\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport { setLocale } from \"yup\";\nimport AuthForm, { Value, AuthFormProps } from \"../components/AuthForm\";\nimport GreenMesage from \"../components/GreenMessage\";\nimport axios from \"../utils/axios\";\nimport { toast } from \"react-toastify\";\n\ninterface Props {}\nexport default function ForgotPassword({}: Props): ReactElement {\n  const validate = (values) => {\n    const errors = { email: null };\n    if (!values.email) {\n      errors.email = \"Required\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      errors.email = \"Invalid email\";\n    }\n    if (errors.email) {\n      return errors;\n    }\n    return null;\n  };\n\n  const submit = async (values: any) => {\n    await axios.get(\"/sanctum/csrf-cookie\");\n    toast.info(\"📧 Sending email...\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    axios\n      .post(\"/api/forgot-password\", {\n        email: values.email,\n      })\n      .then((r) => {\n        toast.success(\"Email sent!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      })\n      .catch((r) => {\n        toast.error(\"Something went wrong\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      });\n  };\n  const authProps: AuthFormProps = {\n    title: \"Forgot password\",\n    values: [\n      {\n        name: \"email\",\n        value: \"\",\n        type: \"\",\n        placeholder: \"email\",\n      },\n    ],\n    validate,\n    submit,\n    submitText: \"Reset password\",\n    bottomLink: { link: \"/login\", text: \"Sign in\" },\n  };\n  return (\n    <div className=\"pt-20\">\n      <AuthForm {...authProps} />\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\ninterface Props {}\n\nexport default function Protected({}: Props): ReactElement {\n  return <div>Protected page</div>;\n}\n","// import axios from \"axios\";\nimport axios from \"../utils/axios\";\nimport useSWR from \"swr\";\nimport { isLoggedIn } from \"./auth\";\nconst fetcher = (url) => axios.get(url).then((res) => res.data);\n\nexport function useUser() {\n  const { data, mutate, error } = useSWR(\"/api/user\", fetcher, {\n    errorRetryCount: 2,\n    revalidateOnFocus: false,\n  });\n\n  const loading = !data && !error;\n  let loggedOut = false;\n  if (error) {\n    loggedOut = true;\n  }\n  return {\n    loading,\n    loggedOut,\n    user: data,\n    mutate,\n  };\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useAppSelector } from \"../app/hooks\";\nimport axios from \"./axios\";\nimport { mutate } from \"swr\";\nimport Cookies from \"js-cookie\";\nimport { useUser } from \"./dataFetching\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nexport function PrivateRoute({ children, ...rest }) {\n  //do something with roles?\n  const { loggedOut } = useUser();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !loggedOut ? (\n          <div className=\"p-20\">{children}</div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport const logOut = async () => {\n  if (typeof window !== \"undefined\") {\n    await axios.post(\"/api/logout\");\n\n    Cookies.remove(\"XSRF-TOKEN\", {\n      expires: 1 / 12,\n      sameSite: \"lax\",\n    });\n    Cookies.remove(\"iris_session\", {\n      expires: 1 / 12,\n      sameSite: \"lax\",\n    });\n    mutate(\"/api/user\");\n\n    // router.push(\"/\");\n  }\n};\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport NavbarLinks from \"@notus-pro/react/NavbarLinks\";\nimport axios from \"../utils/axios\";\nimport { mutate } from \"swr\";\nimport Cookies from \"js-cookie\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUser } from \"../utils/dataFetching\";\n\nconst lefLinksLoggedIn = [\n  { href: \"/protected\", children: \"Protected route\" },\n  {\n    dropdown: true,\n    text: \"Demo Pages\",\n    items: [\n      { disabled: true, children: \"Group 1\" },\n      { href: \"#pablo\", children: \"Demo Page 1\" },\n      { href: \"#pablo\", children: \"Demo Page 2\" },\n      { disabled: true, children: \"Group 2\" },\n      { href: \"#pablo\", children: \"Demo Page 3\" },\n      { href: \"#pablo\", children: \"Demo Page 4\" },\n      { disabled: true, children: \"Group 3\" },\n      { href: \"#pablo\", children: \"Demo Page 5\" },\n      { href: \"#pablo\", children: \"Demo Page 6\" },\n      { disabled: true, children: \"Group 4\" },\n      { href: \"#pablo\", children: \"Demo Page 7\" },\n      { href: \"#pablo\", children: \"Demo Page 8\" },\n    ],\n  },\n];\nconst initialLinks = {\n  color: \"pink\",\n  type: \"fixed\",\n  // logoImage:\n  //   \"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/creative-tim/logo.png\",\n  logoText: \"Iris DWH\",\n  logoLink: { to: \"/\" },\n  leftLinks: [\n    { href: \"#pablo\", children: \"Elements\" },\n    {\n      dropdown: true,\n      text: \"Demo Pages\",\n      items: [\n        { disabled: true, children: \"Group 1\" },\n        { href: \"#pablo\", children: \"Demo Page 1\" },\n        { href: \"#pablo\", children: \"Demo Page 2\" },\n        { disabled: true, children: \"Group 2\" },\n        { href: \"#pablo\", children: \"Demo Page 3\" },\n        { href: \"#pablo\", children: \"Demo Page 4\" },\n        { disabled: true, children: \"Group 3\" },\n        { href: \"#pablo\", children: \"Demo Page 5\" },\n        { href: \"#pablo\", children: \"Demo Page 6\" },\n        { disabled: true, children: \"Group 4\" },\n        { href: \"#pablo\", children: \"Demo Page 7\" },\n        { href: \"#pablo\", children: \"Demo Page 8\" },\n      ],\n    },\n  ],\n  rightLinks: [{ href: \"/login\", children: \"Login\" }],\n};\nexport default function Navigation() {\n  const [links, setLinks] = useState(initialLinks);\n  const { user, loggedOut } = useUser();\n  let history = useHistory();\n  async function logout() {\n    // if (!loggedOut) {\n    const response = await axios.post(\"/api/logout\");\n    localStorage.setItem(\"logout response\", JSON.stringify(response));\n    document.cookie =\n      \"iris_session=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    document.cookie =\n      \"XSRF_TOKEN=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    mutate(\"/api/user\");\n    history.push(\"/login\");\n  }\n\n  useEffect(() => {\n    if (!loggedOut) {\n      setLinks({\n        ...initialLinks,\n        rightLinks: [\n          {\n            dropdown: true,\n            text: user ? user.name : \"Settings\",\n            items: [\n              { disabled: true, children: \"Personal\" },\n              { href: \"/user/settings\", children: \"Settings\" },\n              { href: \"#pablo\", children: \"Demo Page 2\" },\n              { disabled: true, children: \"Organisation\" },\n              { href: \"#pablo\", children: \"Demo Page 3\" },\n              { href: \"#pablo\", children: \"Demo Page 4\" },\n            ],\n          },\n          { children: \"Logout\", onClick: () => logout() },\n        ],\n        leftLinks: lefLinksLoggedIn,\n      });\n    } else {\n      setLinks(initialLinks);\n    }\n  }, [loggedOut, user]);\n  return <NavbarLinks {...links} />;\n}\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useFormik, Form } from \"formik\";\nimport Input from \"@notus-pro/react/Input\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"@notus-pro/react/Button\";\nimport * as Yup from \"yup\";\nimport { stringify } from \"querystring\";\n\nexport interface Value {\n  name: string;\n  value: string;\n  type?: string;\n  placeholder?: string;\n  icon?: string;\n}\nexport interface InnerFormProps {\n  title: string;\n  values: Array<Value>;\n  validationSchema?: any;\n  validate(values: any): any;\n  submit(values: any, FormikBag?: any): any;\n  submitText: string;\n  styleModifier?: string;\n  toggleModal?: boolean;\n  bottomLink?: { text: string; link: string };\n  serverErrorMsg?: string;\n}\n\nexport default function InnerForm({\n  title,\n  values,\n  validationSchema,\n  validate,\n  submit,\n  submitText,\n  styleModifier,\n  toggleModal,\n  bottomLink,\n  serverErrorMsg,\n}: InnerFormProps): ReactElement {\n  let initialValues = {};\n  useEffect(() => {\n    values.forEach((value) => {\n      initialValues[value.name] = value.value;\n    });\n  }, [values]);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnChange: false,\n    validateOnBlur: false,\n    enableReinitialize: true,\n    validate,\n    onSubmit: async (values, FormikBag) => {\n      const response = await submit(values);\n      if (response) {\n        Object.entries(response).forEach(([key, value]) => {\n          formik.errors[key] = String(value);\n        });\n      }\n    },\n  });\n  return (\n    <>\n      <div className=\"flex-auto px-4 lg:px-10 py-5 pt-0\">\n        <form onSubmit={formik.handleSubmit}>\n          <h6 className=\"mt-6 mb-2 font-bold \">{title}</h6>\n          <hr className=\"mb-6 border-b-1 border-blueGray-200\" />\n          {values &&\n            values.map((value) => {\n              return (\n                <div className=\"relative w-full mb-2\">\n                  <label\n                    className=\"block uppercase text-blueGray-500 text-sm\n                           font-bold mb-2 ml-1\"\n                  >\n                    {value.name}\n                  </label>\n                  {/* neg margin to override Input margin */}\n                  <div className=\"-mb-2\">\n                    <Input\n                      id={value.name}\n                      name={value.name}\n                      type={value.type}\n                      onChange={formik.handleChange}\n                      value={formik.values[value.name]}\n                      placeholder={value.placeholder}\n                    />\n                  </div>\n                  {formik.errors[value.name] ? (\n                    <div className=\"text-red-500 text-xs\">\n                      {formik.errors[value.name]}\n                    </div>\n                  ) : (\n                    <div className=\"pb-2\"></div>\n                  )}\n                </div>\n              );\n            })}\n          {serverErrorMsg ? (\n            <div className=\"text-red-500 text-xs\">{serverErrorMsg}</div>\n          ) : (\n            <div className=\"pb-2\"></div>\n          )}\n          <div className={\"text-right -mt-4\"}>\n            <Button color=\"pink\" size=\"sm\" type=\"submit\">\n              {submitText}\n            </Button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport InnerForm, { InnerFormProps } from \"./InnerForm\";\n\nexport interface FormContainerProps {\n  forms: Array<InnerFormProps>;\n  title: string;\n}\n\nexport default function FormContainer({\n  forms,\n  title,\n}: FormContainerProps): ReactElement {\n  return (\n    <div className=\"relative flex flex-col w-full mb-6 shadow-lg rounded-lg bg-white\">\n      <div className=\"mb-0 p-6 pb-0\">\n        <div className=\"text-center flex justify-between items-center\">\n          <h6 className=\"text-xl mb-0 font-bold\">{title}</h6>\n        </div>\n      </div>\n      <div className=\"flex-auto px-6 pb-6 pt-0\"></div>\n      {forms.map((form) => (\n        <InnerForm {...form} />\n      ))}\n    </div>\n  );\n}\n","import { ReactElement } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { mutate } from \"swr\";\nimport FormContainer, {\n  FormContainerProps,\n} from \"../../components/FormContainer\";\nimport { InnerFormProps } from \"../../components/InnerForm\";\nimport axios from \"../../utils/axios\";\nimport { useUser } from \"../../utils/dataFetching\";\ninterface Props {}\n\nfunction UserSettings({}: Props): ReactElement {\n  const current_password = \"current password\";\n  const password = \"new password\";\n  const { user } = useUser();\n\n  const submitProfile = (values) => {\n    axios\n      .put(\"/api/user/profile-information\", {\n        name: values.name,\n      })\n      .then(() => {\n        toast.success(\"Successfully updated profile information\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      })\n      .catch(() => {\n        toast.error(\"Oops something went wrong\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      });\n    mutate(\"/api/user\");\n  };\n  const submitPasswords = (values) => {\n    axios\n      .put(\"/api/user/password\", {\n        current_password,\n        password,\n      })\n      .then(() => {\n        toast.success(\"Successfully updated password\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      })\n      .catch(() => {\n        toast.error(\"Oops something went wrong\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      });\n  };\n  const validateProfile = (values) => {\n    const errors = { name: null };\n    if (!values.name) {\n      errors.name = \"Required\";\n    } else if (values.name.length < 1) {\n      errors.name = \"Name is too small\";\n    } else if (values.name.length > 255) {\n      errors.name = \"Name is too large\";\n    }\n    if (errors.name) {\n      return errors;\n    }\n    return null;\n  };\n\n  const validatePasswords = (values) => {\n    const errors = { [current_password]: null, [password]: null };\n\n    if (!values[current_password]) {\n      errors[current_password] = \"Required\";\n    } else if (values[current_password].length < 8) {\n      errors[current_password] = \"Minimum password lenght is 8\";\n    }\n    if (!values[password]) {\n      errors[password] = \"Required\";\n    } else if (values[password].length < 8) {\n      errors[password] = \"Minimum password lenght is 8\";\n    }\n\n    if (errors[current_password] || errors[password]) {\n      return errors;\n    }\n    return null;\n  };\n  const updateProfile: InnerFormProps = {\n    title: \"Update profile\",\n    values: [{ name: \"name\", value: \"\", type: \"text\" }],\n    validate: validateProfile,\n    submit: submitProfile,\n    submitText: \"Update\",\n  };\n  const updatePassword: InnerFormProps = {\n    title: \"Change password\",\n    values: [\n      { name: \"current password\", value: \"\", type: \"password\" },\n      { name: \"new password\", value: \"\", type: \"password\" },\n    ],\n    validate: validatePasswords,\n    submit: submitPasswords,\n    submitText: \"Change\",\n  };\n  const formContainer: FormContainerProps = {\n    title: \"User settings\",\n    forms: [updateProfile, updatePassword],\n  };\n  return (\n    <div className=\"w-1/2\">\n      <div className=\"pt-20\">\n        <FormContainer {...formContainer} />\n      </div>\n    </div>\n  );\n}\n\nexport default UserSettings;\n","import \"./App.css\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Protected from \"./pages/Protected\";\nimport { PrivateRoute } from \"./utils/auth\";\nimport Navigation from \"./components/Navigation.jsx\";\nimport { useUser } from \"./utils/dataFetching\";\nimport { ToastContainer } from \"react-toastify\";\nimport UserSettings from \"./pages/user/UserSettings\";\n// import { useSelector } from \"react-redux\";\nfunction App() {\n  return (\n    <Router>\n      <main className={`min-h-screen bg-gray-100`}>\n        <Navigation />\n        <ToastContainer />\n\n        <Switch>\n          {/* public routes */}\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/forgot-password\">\n            <ForgotPassword />\n          </Route>\n          <Route exact path=\"/reset-password/:token\">\n            <ResetPassword />\n          </Route>\n\n          {/* private routes */}\n          <PrivateRoute exact path=\"/\">\n            <Home />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/protected\">\n            <Protected />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/user/settings\">\n            <UserSettings />\n          </PrivateRoute>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nexport interface CounterState {\n  loggedIn: boolean;\n  //   email: string;\n  //   name: string;\n  //   id: number;\n}\n\nconst initialState: CounterState = {\n  loggedIn: false,\n  //   email: null,\n  //   name: null,\n  //   id: null,\n};\n\nconst UserSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login: (state) => {\n      state.loggedIn = true;\n    },\n    logout: (state) => {\n      state.loggedIn = false;\n    },\n  },\n});\n\nexport const { login, logout } = UserSlice.actions;\nexport default UserSlice.reducer;\n","// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// Define a service using a base URL and expected endpoints\nexport const authApi = createApi({\n  reducerPath: \"auth\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_BACKEND_URL,\n    credentials: \"include\",\n  }),\n  endpoints: (builder) => ({\n    csrf: builder.query({\n      query: () => `/sanctum/csrf-cookie`,\n    }),\n    login: builder.mutation({\n      query: ({ email, password }) => ({\n        url: `/api/login`,\n        method: \"POST\",\n        body: { email, password },\n      }),\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: `/api/logout`,\n        method: \"POST\",\n      }),\n    }),\n  }),\n});\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const { useCsrfQuery, useLoginMutation, useLogoutMutation } = authApi;\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport userReducer from \"../features/UserSlice\";\nimport { authApi } from \"../features/AuthApi\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    user: userReducer,\n    [authApi.reducerPath]: authApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(authApi.middleware),\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@notus-pro/react/tailwind.min.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <App />\n      </Suspense>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}